function validate(forms, err = false)
{
    if(forms !== null && !err)
    {
        for(var form of forms)
        {
            var form_url = form.action;
            form.action = "javascript: void(0);";

            if(form.className.indexOf("validate") !== -1)
            {
                form.onsubmit = function(e)
                {
                    e.preventDefault();
                    
                    var inputs = this.querySelectorAll("input, select, textarea");
                    form = this;
                    var errs = [];

                    for(var input of inputs)
                    {
                        if(input.className.indexOf("required") !== -1 && (input.value === "" || input.value === null))
                        {
                            if(errs.indexOf(input.getAttribute("name")) === -1)
                            {
                                errs.push(input.getAttribute("name"));
                                var input_name = input.getAttribute("name");
                                var input_dataName = input.getAttribute("data-name");
                                var err_text = "The <h6>" + (input_dataName ? input_dataName : input_name) + "</h6> field is required";

                                if(input.getAttribute("name") === "checked")
                                {
                                    err_text = "Please make sure to checkmark all edited fields";
                                }

                                var elem = createElem({
                                    "div": {
                                        "class": "alert alert-danger",
                                        "id" : "error-" + input_name,
                                        "childElems": [
                                            {
                                                "span": {
                                                    "class": "error-text",
                                                    "text": err_text
                                                }
                                            },
                                            {
                                                "a": {
                                                    "class": "alert-close",
                                                    "attributes": {
                                                        "href": "javascript: void(0)",
                                                        "onclick": "closeElem('.alert-danger')"
                                                    },
                                                    "childElems": [
                                                        {
                                                            "i": {
                                                                "class": "fas fa-times"
                                                            }
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                });

                                var curAlerts = form.parentElement.querySelectorAll(".alert-danger");

                                if(curAlerts)
                                {
                                    for(alert of curAlerts)
                                    {
                                        var aid = alert.id.split("error-")[1];

                                        if(errs.indexOf(aid) === -1)
                                        {
                                            form.parentElement.removeChild(alert);
                                        }
                                    }
                                }

                                elem.querySelector(".error-text").innerHTML = elem.innerText;

                                if(!form.parentElement.querySelector("#" + elem.id))
                                {
                                    form.parentElement.insertBefore(elem, form);
                                }
                            }
                        }
                    }

                    if(errs.length === 0)
                    {
                        var curAlerts = form.parentElement.querySelectorAll(".alert-danger");

                        if(curAlerts)
                        {
                            for(alert of curAlerts)
                            {
                                form.parentElement.removeChild(alert);
                            }
                        }

                        form.action = form_url;
                        form.submit();
                    }
                }
            }
        }
    }
    else if(err && typeof err === "object")
    {
        var elem = createElem({
            "div": {
                "class": "alert alert-danger error-default",
                "id": "error-" + err.id,
                "childElems": [
                    {
                        "span": {
                            "class": "error-text",
                            "text": err.text
                        }
                    },
                    {
                        "a": {
                            "class": "alert-close",
                            "attributes": {
                                "href": "javascript: void(0)",
                                "onclick": "closeElem('.alert-danger')"
                            },
                            "childElems": [
                                {
                                    "i": {
                                        "class": "fas fa-times"
                                    }
                                }
                            ]
                        }
                    }
                ]
            }
        });

        if(forms === null)
        {
            return elem;
        }

        if(forms.parentElement.querySelector("#error-" + err.id) === null)
        {
            forms.parentElement.insertBefore(elem, forms);
        }
    }
}